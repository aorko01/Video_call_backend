
services:
  mongo:
    image: mongo
    container_name: mongo-container
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}  # Set the root username
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}  # Set the root password
    networks:
      - mongo-network

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}  # Use the same username as mongo
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}  # Use the same password as mongo
      ME_CONFIG_MONGODB_SERVER: mongo-container
    ports:
      - "8081:8081"
    networks:
      - mongo-network

  node-app:
    build: .  # Build your Node.js app from a Dockerfile in the current directory
    environment:
      MONGO_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}  # Use the root username
      MONGO_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}  # Use the root password
      MONGO_HOST: mongo-container
      MONGO_DB: ${MONGO_DB}  # Set the database name
    ports:
      - "3000:3000"
    depends_on:
      - mongo
    volumes:
      - .:/usr/src/app  # Mount the current directory to the /usr/src/app in the container
    networks:
      - mongo-network

networks:
  mongo-network:
    driver: bridge
